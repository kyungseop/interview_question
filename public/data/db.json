[
  {
    "quiz": "DB 기본키가 여러 개인 경우는?",
    "answer": ""
  },
  {
    "quiz": "백업 방법",
    "answer": ""
  },
  {
    "quiz": "마이그레이션 방법",
    "answer": ""
  },
  {
    "quiz": "조인 방법 및 종류",
    "answer": "inner join, outer join"
  },
  {
    "quiz": "RDBMS 란",
    "answer": ""
  },
  {
    "quiz": "NoSQL 이란",
    "answer": "NoSQL은 RDBMS와는 달리 데이터 간의 관계를 정의하지 않는다. RDBMS에 비해 훨씬 더 대용량의 데이터를 저장할 수 있다. 분산형 구조. 고정되지 않은 테이블 스키마 "
  },
  {
    "quiz": "NoSQL의 특징",
    "answer": "관계형데이터 또는 정형데이터가 아닌 데이터, 즉 비정형데이터라는 것을 보다 쉽게 담아서 저장하고 처리할 수 있는 구조를 가진 데이터 베이스 NoSQL 의 가장 큰 특징 : 네트워크 기반의 분산 데이터베이스, 확장성, 가용성, 높은 성능 그리고 다양한 데이터 형태(schema-less) 를 수용"
  },
  {
    "quiz": "DB 에서 Index 란?",
    "answer": "데이터베이스 내의 테이블에서 원하는 데이터를 좀더 빨리 찾을수 있게 데이터의 위치정보를 모아놓은  데이터베이스내의 개체(Object). 인덱스가 항상 정렬된 상태로 만들어지고 유지되기 때문에 원하는 데이터를 인덱스를 이용해서 빠르게 검색가능. 테이블 스캔은 데이터량이 몇만건이 되더라도 처음부터 순차적으로 검색을 하게 됩니다. 이에 반해 인덱스 스캔은 구성되어 있는 인덱스 레벨만큼의 건수만 검색하면 원하는 데이터를 얻을 수 있습니다."
  },
  {
    "quiz": "Index 생성지침",
    "answer": "Where절의 조회조건이나 조인 조건에 자주 사용되는 경우, 컬럼값이 Unique한 컬럼, Update가 자주 발생하지 않는 컬럼, 해당 컬럼을 통한 Select연산의 결과가 전체 데이터 수의 5%이내인 큰 테이블"
  },
  {
    "quiz": "Index 장단점",
    "answer": "1.장점: 검색 속도가 빨라지며 시스템에 걸리는 부하를 줄여서 시스템 전체 성능을 향상 2.단점: 인덱스를 위한 추가적인 공간이 필요, 생성시간 소요, 데이터의 변경 작업(INSERT/UPDATE/DELETE)이 자주 일어날 경우에는 오히려 성능이 저하"
  },
  {
    "quiz": "Single Column Index 란?",
    "answer": "한 개의 컬럼으로 생성된 인덱스"
  },
  {
    "quiz": "Composite Index 란?",
    "answer": "두 개 이상의 컬럼으로 생성된 인덱스, 동시에 조건을 만족해야 하는 경우에 결합 Index를 사용하면 테이블 액세스를 줄여줘 성능을 향상시킬 수 있다."
  },
  {
    "quiz": "SQLite 특징",
    "answer": "1.장점: 데이터가 파일 하나기 때문에 백업이 간단, 용량 걱정이 없다 : 코어는 25kb,크기가 매우 작고, 빠르고, 작동하기가 쉽다 2.단점: 원격 사용이 불가능 하다, 네트워크 지원이 없다. 로컬에서만 사용가능하며 인터넷응용을 원한다면 별도의 서버 프로그램을 만들어야 한다. 동시에 많은 프로세스가 접근 할 때 문제가 생길 수 있다."
  }
]